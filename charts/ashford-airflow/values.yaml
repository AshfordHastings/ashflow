airflow:
  # image:
  #   repository: apache/airflow
  #   tag: 2.8.4-python3.9
  executor: KubernetesExecutor
  # fernetKeySecretName: 'ashflow-fernet-key'
  users:
    - username: admin
      password: admin
      role: Admin
  # scheduler:
  #   replicas: 1
  images:
    airflow:
      pullPolicy: IfNotPresent
      repository: airflowacr695.azurecr.io/ashflow/ashflow
      tag: 0.0.2
    pod_template:
      pullPolicy: IfNotPresent
      repository: airflowacr695.azurecr.io/ashflow/ashflow
      tag: 0.0.2
  registry:
    secretName: acr-secret
  web:
    replicas: 1
    # service:
    #   type: ClusterIP
    #   port: 8080
  ingress: 
    enabled: true 
    web:
      annotations: 
        nginx.ingress.kubernetes.io/rewrite-target: /
      hosts:
        - "airflow.local"
      path: /
      pathType: ImplementationSpecific
      ingressClassName: nginx
    # web:
    #   annotations: 
    #     nginx.ingress.kubernetes.io/use-regex: "true"
    #     nginx.ingress.kubernetes.io/rewrite-target: /
    #     nginx.ingress.kubernetes.io/proxy-redirect-from: /
    #     nginx.ingress.kubernetes.io/proxy-redirect-to: /airflow/
    #     nginx.ingress.kubernetes.io/configuration-snippet: |
    #       rewrite ^(/airflow)/(.*) /$2 break;
    #   hosts:
    #     - "airflow.local"
    #   path: /airflow(/|$)(.*)
    #   pathType: ImplementationSpecific
    #   ingressClassName: nginx
  # workers:
  #   enabled: false
  triggerer:
    enabled: false
  flower:
    enabled: false
  dags: 
    mountPath: /opt/airflow/dags
    persistence:
      enabled: true
      size: 4Gi
      storageClassName: standard
      accessMode: ReadOnlyMany
    gitSync:
      enabled: false
  serviceAccount:
    created: false
  extraManifests: []
  pgBouncer:
    enabled: false
  postgresql:
    enabled: true
    # persistence:
    #   enabled: true
    #   storageClass: ''
    #   size: 8Gi
  # externalDatabase:
  #   type: postgres

  #   # host: postgresql+psycopg2://airflow:airflow@postgres/airflow
  #   host: host.docker.internal  # Special DNS name to access host from Docker containers
  #   port: 5432
  #   user: airflow
  #   password: airflow
  #   properties: ""
  redis:
    enabled: false
  externalRedis:
    enabled: false
  extraEnvFrom: |-
    - secretRef:
        name: airflow-spn-credentials
  extraEnv: |-
    - name: AIRFLOW__CORE__LOAD_EXAMPLES
      value: "False"
    - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION 
      value: "True"
    - name: AIRFLOW__WEBSERVER__WEB_SERVER_URL_PREFIX
      value: /
    - name: AIRFLOW__WEBSERVER__BASE_URL
      value: http://airflow.local
    - name: AIRFLOW__WEBSERVER__WEB_SERVER_BASE_URL
      value: http://airflow.local
    # Limit the number of active DAG runs per DAG
    - name: AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG 
      value: "30"
    # Max Active tasks per DAG (for ALL DAG runs combined)
    - name: AIRFLOW__CORE__MAX_ACTIVE_TASKS_PER_DAG 
      value: "30"
    # Max number of consecutive dag runs before dag is automatically paused 
    - name: AIRFLOW__CORE__MAX_CONSECUTIVE_FAILED_DAG_RUNS_PER_DAG
      value: "10"
    # The interval at which the scheduler should try to process a file (not new files, just updated files)
    - name: AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL
      value: "30"
    # The interval that the scheduler looks for NEW dags in seconds - safe to set to 30 seconds for less than 200 DAGs
    - name: AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL
      value: "30"
    # How many pods can be created per scheduler loop 
    - name: AIRFLOW__KUBERNETES__WORKER_PODS_CREATION_BATCH_SIZE
      value: "4"
    - name: AIRFLOW__SECRETS__BACKEND
      value: "airflow.providers.microsoft.azure.secrets.key_vault.AzureKeyVaultBackend"
    - name: AIRFLOW__SECRETS__BACKEND_KWARGS
      value: '{"connections_prefix": "airflow-connections", "vault_url": "https://airflowkeyvault1.vault.azure.net/"}'
  # extraEnv: |-
  #   - name: AIRFLOW__CORE__LOAD_EXAMPLES
  #     value: "False"
  #   - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION 
  #     value: "True"
  #   - name: AIRFLOW__WEBSERVER__WEB_SERVER_URL_PREFIX
  #     value: /airflow
  #   - name: AIRFLOW__WEBSERVER__BASE_URL
  #     value: http://airflow.local/airflow
  #   - name: AIRFLOW__WEBSERVER__WEB_SERVER_BASE_URL
  #     value: http://airflow.local/airflow
    
      



    

